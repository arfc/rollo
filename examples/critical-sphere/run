#!/bin/bash
#PBS -j oe
#PBS -l nodes=51:ppn=16:xk
#PBS -l walltime=1:00:00
#PBS -l gres=ccm
#PBS -l flags=commlocal:commtolerant
#PBS -N run
#PBS -q normal
#PBS -A bbcc
cd $PBS_O_WORKDIR

source /opt/modules/default/init/bash
module list

cd /u/sciteam/chee1/github/rollo/examples/critical-sphere
source /projects/sciteam/bbcc/projects/openmc/openmc-parallel-python/openmc/build/myvirtualenv/bin/activate
export PATH=$PATH:$HOME/openmpi/bin
export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$HOME/openmpi/lib

TPN=1
NNODES=51
HOSTLIST=znodelist
LAUNCH=zstart.sh
cat $HOME/.crayccm/ccm_nodelist.$PBS_JOBID | sort -u | awk -v n=$TPN '{for(i=0;i<n;i++) print $0}' > $HOSTLIST

let NTASKS=$NNODES*$TPN

echo "#!/bin/bash
$HOME/openmpi/bin/mpirun --bind-to none $(export -p | sed 's/declare //;s/=.*//;s/-rx/-x/' | paste -s) -v -np $NTASKS --mca btl tcp,self --mca btl_tcp_if_include ipogif0 --hostfile $HOSTLIST -npernode $TPN $(which python) ../../../../rollo/rollo -i rollo_critical_sphere.json -p max &> job.out" > $LAUNCH
chmod 755 $LAUNCH

export PMI_NO_FORK=1

ccmrun $LAUNCH